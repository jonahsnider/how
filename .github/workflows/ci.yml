name: CI

on: [push, pull_request]

jobs:
  build:
    name: Build

    runs-on: ubuntu-latest

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: './go.mod'
      - name: Compile app
        run: go build
  check-formatting:
    name: Check formatting

    runs-on: ubuntu-latest

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: './go.mod'
      - name: Check formatting
        run: gofmt -l .
  lint:
    name: Check formatting

    runs-on: ubuntu-latest

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: './go.mod'
      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
  release:
    name: Release

    runs-on: ubuntu-latest

    if: ${{ github.ref  == 'refs/heads/main' }}

    needs: [build, lint]

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: './go.mod'
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
